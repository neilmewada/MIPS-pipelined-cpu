Time resolution is 1 ps
Writing 0xxxxxxxxx to register  0
Inside else
multu = x
Inside else
multu = 0
Writing 0x00000030 to register 29
Inside else
multu = 0
Writing 0x00000004 to register  4
Inside else
multu = 0
Writing 0x0000000c to register 31
Inside else
multu = 0
Writing 0x00000028 to register 29
Inside else
multu = 0
Writing 0x0000002c to register  4
Inside else
multu = 0
Writing 0x00000028 to register 31
Inside else
multu = 0
Writing 0x00000002 to register  8
Inside else
multu = 0
Writing 0x00000000 to register  8
Inside else
multu = 0
Writing 0x00000000 to register  0
Inside else
multu = 0
Writing 0x00000003 to register  4
Inside else
multu = 0
Writing 0x00003040 to register 31
Inside else
multu = 0
Writing 0x00000020 to register 29
Inside else
multu = 0
Writing 0x00000024 to register  4
Inside else
multu = 0
Writing 0x00000020 to register 31
Inside else
multu = 0
Inside else
multu = 0
Writing 0x00000030 to register 29
Inside else
multu = 0
Writing 0x00000004 to register  4
Inside else
multu = 0
Writing 0x0000000c to register 31
Inside else
multu = 0
Writing 0x00000028 to register 29
Inside else
multu = 0
Writing 0x0000002c to register  4
Inside else
multu = 0
Writing 0x00000028 to register 31
Inside else
multu = 0
Writing 0x00000002 to register  8
Inside else
multu = 0
Writing 0x00000000 to register  8
Inside else
multu = 0
Writing 0x00000000 to register  0
Inside else
multu = 0
Writing 0x00000003 to register  4
Inside else
multu = 0
Writing 0x00003040 to register 31
Inside else
multu = 0
Writing 0x00000020 to register 29
Inside else
multu = 0
Writing 0x00000024 to register  4
Inside else
multu = 0
Writing 0x00000020 to register 31
Inside else
multu = 0
Writing 0x00000002 to register  8
Inside else
multu = 0
Writing 0x00000000 to register  8
Inside else
multu = 0
Writing 0x00000000 to register  0
Inside else
multu = 0
Writing 0x00000002 to register  4
Inside else
multu = 0
Writing 0x00003040 to register 31
Inside else
multu = 0
Writing 0x00000018 to register 29
Inside else
multu = 0
Writing 0x0000001c to register  4
Inside else
multu = 0
Writing 0x00000018 to register 31
Inside else
multu = 0
Writing 0x00000002 to register  8
Inside else
multu = 0
Writing 0x00000000 to register  8
Inside else
multu = 0
Writing 0x00000000 to register  0
Inside else
multu = 0
Writing 0x00000001 to register  4
Inside else
multu = 0
Writing 0x00003040 to register 31
Inside else
multu = 0
Writing 0x00000010 to register 29
Inside else
multu = 0
Writing 0x00000014 to register  4
Inside else
multu = 0
Writing 0x00000010 to register 31
Inside else
multu = 0
Writing 0x00000002 to register  8
Inside else
multu = 0
Writing 0x00000001 to register  8
Inside else
multu = 0
Writing 0x00000001 to register  0
Inside else
multu = 0
Writing 0x00000001 to register  2
Inside else
multu = 0
Writing 0x00000018 to register 29
Inside else
multu = 0
Writing 0x00003040 to register  0
Inside else
multu = 0
Writing 0x00003040 to register 31
Inside else
multu = 0
Writing 0x00000002 to register  4
Inside else
multu = 0
Writing 0x00000020 to register 29
Inside else
multu = 0
MULTU called, multu = 0
hi = 0xxxxxxxxx, lo = 0xxxxxxxxx
Inside if
multu = 1
hi = 0xxxxxxxxx, lo = 0xxxxxxxxx
hi = 0x00000000, lo = 0x00000002
Writing 0x00000003 to register  0
MFLO called
Inside if
multu = 1
Inside else
multu = 0
Writing 0x00000002 to register  2
Inside else
multu = 0
Writing 0x00000003 to register  0
Inside else
multu = 0
Writing 0x00003040 to register 31
Inside else
multu = 0
Writing 0x00000003 to register  4
Inside else
multu = 0
Writing 0x00000028 to register 29
Inside else
multu = 0
MULTU called, multu = 0
hi = 0x00000000, lo = 0x00000002
Inside if
multu = 1
hi = 0x00000000, lo = 0x00000002
hi = 0x00000000, lo = 0x00000006
Writing 0x00000005 to register  0
MFLO called
Inside if
multu = 1
Inside else
multu = 0
Writing 0x00000006 to register  2
Inside else
multu = 0
Writing 0x00000005 to register  0
Inside else
multu = 0
Writing 0x0000000c to register 31
Inside else
multu = 0
Writing 0x00000004 to register  4
Inside else
multu = 0
Writing 0x00000030 to register 29
Inside else
multu = 0
MULTU called, multu = 0
hi = 0x00000000, lo = 0x00000006
Inside if
multu = 1
hi = 0x00000000, lo = 0x00000006
hi = 0x00000000, lo = 0x00000018
Writing 0x0000000a to register  0
MFLO called
Inside if
multu = 1
Inside else
multu = 0
Writing 0x00000018 to register  2
Inside else
multu = 0
Writing 0x0000000a to register  0
Inside else
multu = 0
Writing 0x00000018 to register 16
Inside else
multu = 0
Writing 0x00000000 to register  0
Inside else
multu = 0
Writing 0x00000000 to register  0
$finish called at time : 720 ns : File "D:/MS CMPE/Comp. Architecture/Assignment_7/Assignment_7.srcs/sim_1/imports/testbench/tb_mips_top.v" Line 51
